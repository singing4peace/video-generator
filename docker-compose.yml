version: "3"

services:
  database:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - database:/data/postgres
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=main
      - POSTGRES_DB=main
      - PGDATA=/data/postgres

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.6
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Configure entrypoint
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker"
      # SSL configuration
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=naegele_daniel@web.de"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # Enable dashboard
      - "--api.dashboard=true"
      - "--api.insecure=false"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik-certificates:/letsencrypt
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  website:
    image: butzlabben/singing4peace-website:main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=Host(`singing4peace.de`)"
      - "traefik.http.routers.website.tls=true"
      - "traefik.http.routers.website.tls.certresolver=myresolver"

  service:
    image: video-generator:latest
    build: .
    environment:
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.service.rule=Host(`api.singing4peace.de`)"
      - "traefik.http.routers.service.tls=true"
      - "traefik.http.routers.service.tls.certresolver=myresolver"

volumes:
  database:
  storage:
